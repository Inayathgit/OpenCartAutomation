package testCases;

import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;


import org.apache.commons.lang3.RandomStringUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Parameters;

public class BaseClass {
	 
	public WebDriver driver;
	public Logger logger;
	Properties prop;
	@BeforeClass
	@Parameters({"os","browser"})
	public void setup(String os, String browser) throws IOException  {
		
		FileReader file = new FileReader(".//src//test/resources//Config.properties");
		prop = new Properties();
		prop.load(file);
		logger = LogManager.getLogger(this.getClass());
		switch(browser.toLowerCase()) {
		case "chrome": driver= new ChromeDriver();break;
		case "edge": driver = new EdgeDriver();break;
		case "firefox": driver =  new FirefoxDriver();break;
		default: System.out.println("Invalid Driver");return;
		}
		
		driver.get(prop.getProperty("url"));
		driver.manage().deleteAllCookies();
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
		driver.manage().window().maximize();
			
	}
	
	@AfterClass
	public void tearDown() {
		driver.quit();
	}
	
	
	public String generateRandomString(int length) {
		
		String str = RandomStringUtils.randomAlphabetic(length);
		return str;
	}
	
	public String generateRandomAlphanumeric(int length) {
		String str = RandomStringUtils.randomAlphanumeric(length);
		return str;
	}
	public String generateRandomNumeric(int length) {
		String str = RandomStringUtils.randomNumeric(length);
		return str;
	}
}
